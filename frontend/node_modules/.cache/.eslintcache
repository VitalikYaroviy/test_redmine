[{"/home/vitalik/work/test/ideaboard-api/frontend/src/index.js":"1","/home/vitalik/work/test/ideaboard-api/frontend/src/App.js":"2","/home/vitalik/work/test/ideaboard-api/frontend/src/reportWebVitals.js":"3","/home/vitalik/work/test/ideaboard-api/frontend/src/routes/index.js":"4","/home/vitalik/work/test/ideaboard-api/frontend/src/components/index.js":"5","/home/vitalik/work/test/ideaboard-api/frontend/src/services/index.js":"6","/home/vitalik/work/test/ideaboard-api/frontend/src/services/history.js":"7","/home/vitalik/work/test/ideaboard-api/frontend/src/components/Users/index.js":"8","/home/vitalik/work/test/ideaboard-api/frontend/src/components/LogIn/index.js":"9","/home/vitalik/work/test/ideaboard-api/frontend/src/routes/PublicRoutes.js":"10","/home/vitalik/work/test/ideaboard-api/frontend/src/containers/index.js":"11","/home/vitalik/work/test/ideaboard-api/frontend/src/containers/LogInContainer.js":"12","/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/actions.js":"13","/home/vitalik/work/test/ideaboard-api/frontend/src/store/index.js":"14","/home/vitalik/work/test/ideaboard-api/frontend/src/store/configure.js":"15","/home/vitalik/work/test/ideaboard-api/frontend/src/services/api/index.js":"16","/home/vitalik/work/test/ideaboard-api/frontend/src/store/reducer.js":"17","/home/vitalik/work/test/ideaboard-api/frontend/src/store/sagas.js":"18","/home/vitalik/work/test/ideaboard-api/frontend/src/constants/api.js":"19","/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/reducer.js":"20","/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/sagas.js":"21","/home/vitalik/work/test/ideaboard-api/frontend/src/services/Session.js":"22","/home/vitalik/work/test/ideaboard-api/frontend/src/routes/PrivateRoutes.js":"23","/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js":"24","/home/vitalik/work/test/ideaboard-api/frontend/src/components/Developer/index.js":"25","/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/reducer.js":"26","/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/actions.js":"27","/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/sagas.js":"28","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/index.js":"29","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/CalendarIcon.js":"30","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/ArrowBackIcon.js":"31","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/NextArrowIcon.js":"32","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/CancelIcon.js":"33"},{"size":500,"mtime":1614846675841,"results":"34","hashOfConfig":"35"},{"size":322,"mtime":1614866400113,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1614846675841,"results":"37","hashOfConfig":"35"},{"size":384,"mtime":1614849112034,"results":"38","hashOfConfig":"35"},{"size":104,"mtime":1614864503429,"results":"39","hashOfConfig":"35"},{"size":134,"mtime":1614866342941,"results":"40","hashOfConfig":"35"},{"size":94,"mtime":1614847108085,"results":"41","hashOfConfig":"35"},{"size":598,"mtime":1615122013619,"results":"42","hashOfConfig":"35"},{"size":456,"mtime":1615121850271,"results":"43","hashOfConfig":"35"},{"size":354,"mtime":1614853046459,"results":"44","hashOfConfig":"35"},{"size":107,"mtime":1614864357794,"results":"45","hashOfConfig":"35"},{"size":634,"mtime":1615121888895,"results":"46","hashOfConfig":"35"},{"size":2801,"mtime":1614950552538,"results":"47","hashOfConfig":"35"},{"size":138,"mtime":1614852362596,"results":"48","hashOfConfig":"35"},{"size":661,"mtime":1614852253784,"results":"49","hashOfConfig":"35"},{"size":2435,"mtime":1614852651880,"results":"50","hashOfConfig":"35"},{"size":338,"mtime":1614932242923,"results":"51","hashOfConfig":"35"},{"size":332,"mtime":1614932268439,"results":"52","hashOfConfig":"35"},{"size":52,"mtime":1614865031101,"results":"53","hashOfConfig":"35"},{"size":1570,"mtime":1614951098336,"results":"54","hashOfConfig":"35"},{"size":2132,"mtime":1614950641199,"results":"55","hashOfConfig":"35"},{"size":568,"mtime":1614866413321,"results":"56","hashOfConfig":"35"},{"size":360,"mtime":1614864392453,"results":"57","hashOfConfig":"35"},{"size":4733,"mtime":1615122068795,"results":"58","hashOfConfig":"35"},{"size":7882,"mtime":1615198552718,"results":"59","hashOfConfig":"35"},{"size":2534,"mtime":1615119308616,"results":"60","hashOfConfig":"35"},{"size":4106,"mtime":1615116737871,"results":"61","hashOfConfig":"35"},{"size":3172,"mtime":1615118593774,"results":"62","hashOfConfig":"35"},{"size":291,"mtime":1615122383047,"results":"63","hashOfConfig":"35"},{"size":2086,"mtime":1614943818889,"results":"64","hashOfConfig":"35"},{"size":766,"mtime":1614943729732,"results":"65","hashOfConfig":"35"},{"size":754,"mtime":1614943965302,"results":"66","hashOfConfig":"35"},{"size":1076,"mtime":1615122352247,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"oaqtns",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/vitalik/work/test/ideaboard-api/frontend/src/index.js",[],["142","143"],"/home/vitalik/work/test/ideaboard-api/frontend/src/App.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/reportWebVitals.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/routes/index.js",["144"],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/services/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/services/history.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/Users/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/LogIn/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/routes/PublicRoutes.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/LogInContainer.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/actions.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/configure.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/services/api/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/reducer.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/sagas.js",["145"],"import { all, fork } from 'redux-saga/effects'\n\nimport sessionsSagas from './sessions/sagas'\nimport jobsSagas from './jobs/sagas'\n// import authSagas from './auth/sagas'\n\nconst sagas = [\n  sessionsSagas,\n  jobsSagas,\n  // authSagas\n]\n\nexport default function* (services = {}) {\n  yield all(sagas.map(saga => fork(saga, services)))\n}","/home/vitalik/work/test/ideaboard-api/frontend/src/constants/api.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/reducer.js",["146"],"import * as constant from './actions'\n\nconst initialResourceState = {\n  data: {},\n  users: [],\n  loading: false,\n  errors: {}\n}\n\nexport default (state = initialResourceState, { type, payload }) => {\n  switch (type) {\n\n  case constant.SESSION_CREATE_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.SESSION_CREATE_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      data: payload.data\n    }\n  case constant.SESSION_CREATE_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.SESSION_SHOW_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.SESSION_SHOW_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      data: payload.data\n    }\n  case constant.SESSION_SHOW_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.SESSION_DELETE_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.SESSION_DELETE_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      data: {}\n    }\n  case constant.SESSION_DELETE_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.GET_USERS_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.GET_USERS_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      users: payload.users\n    }\n  case constant.GET_USERS_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  default:\n    return state\n  }\n}","/home/vitalik/work/test/ideaboard-api/frontend/src/store/sessions/sagas.js",["147"],"import { put, call, takeLatest } from 'redux-saga/effects'\n// import { toastr } from 'react-redux-toastr'\n\nimport * as actions from './actions'\n\nfunction* createSession(api, { data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.post], `/${resource}`,  data)\n    yield put(actions.sessionCreateSuccess(resource, detail, { data }, thunk))\n  } catch (e) {\n    yield put(actions.sessionCreateFailure(resource, e, { data }, thunk))\n  }\n}\n\nfunction* showSession(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.sessionShowSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.sessionShowFailure(resource, e, thunk))\n  }\n}\n\nfunction* deleteSession(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.delete], `/${resource}`)\n    yield put(actions.sessionDeleteSuccess(resource, detail, thunk))\n    // toastr.success('Success', 'You successfully loggout!')\n  } catch (e) {\n    yield put(actions.sessionDeleteFailure(resource, e, thunk))\n    // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* getUsers(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getUsersSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getUsersFailure(resource, e, thunk))\n  }\n}\n\nfunction* watchSessionCreateRequest(api, { payload, meta }) {\n  yield call(createSession, api, payload, meta)\n}\n\nfunction* watchSessionShowRequest(api, { meta }) {\n  yield call(showSession, api, meta)\n}\n\nfunction* watchSessionDeleteRequest(api, { meta }) {\n  yield call(deleteSession, api, meta)\n}\n\nfunction* watchGetUsersRequest(api, { meta }) {\n  yield call(getUsers, api, meta)\n}\n\nexport default function* ({ api }) {\n  yield takeLatest(actions.SESSION_CREATE_REQUEST, watchSessionCreateRequest, api)\n  yield takeLatest(actions.SESSION_SHOW_REQUEST, watchSessionShowRequest, api)\n  yield takeLatest(actions.SESSION_DELETE_REQUEST, watchSessionDeleteRequest, api)\n  yield takeLatest(actions.GET_USERS_REQUEST, watchGetUsersRequest, api)\n}","/home/vitalik/work/test/ideaboard-api/frontend/src/services/Session.js",["148"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport isEmpty from 'lodash.isempty'\n\nimport PublicRoutes from '../routes/PublicRoutes'\nimport PrivateRoutes from '../routes/PrivateRoutes'\nimport { sessionShowRequest } from '../store/sessions/actions'\n\nexport const Session = () => {\n  const dispatch = useDispatch()\n\n  const { data } = useSelector(state => state.sessions)\n\n  useEffect(() => {\n    dispatch(sessionShowRequest('authentications'))\n  }, [])\n\n  return !isEmpty(data) ? <PrivateRoutes /> : <PublicRoutes/>\n}\n","/home/vitalik/work/test/ideaboard-api/frontend/src/routes/PrivateRoutes.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js",["149","150","151","152","153"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { isEmpty } from 'lodash'\n\nimport { Developer } from '../components'\nimport { sessionDeleteRequest, getUsersRequest } from '../store/sessions/actions'\nimport {\n  getJobsRequest,\n  jobCreateRequest,\n  jobDeleteRequest,\n  getFiltersJobsRequest,\n  getJobRequest,\n  jobUpdateRequest\n} from '../store/jobs/actions'\n\nexport const DeveloperContainer = () => {\n  const dispatch = useDispatch()\n\n  const [selectedProject, setSelectedProject] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [selectedEditProject, setSelectedEditProject] = useState(null)\n  const [selectedEditCategory, setSelectedEditCategory] = useState(null)\n  const [valueEdit, setValueEdit] = useState('')\n  const [value, setValue] = useState('')\n  const [startDate, setStartDate] = useState(new Date())\n  const [open, setModalOpen] = useState(false)\n  const [flag, setFlag] = useState(false)\n  const [usersArray, setUsersArray] = useState([])\n\n  const { data, users } = useSelector(state => state.sessions)\n  const { jobsData, job } = useSelector(state => state.jobs)\n\n  useEffect(() => {\n    if (data.attributes.isAdmin) dispatch(getUsersRequest('users'))\n  }, [data])\n    \n  useEffect(() => {\n    if (users.length) {\n      const usersData =  [];\n      users.map(item => {\n        usersData.push({ value: item.name.toLowerCase(), label: item.name })\n      })\n      setUsersArray(usersData)\n    }\n  }, [users])\n\n  useEffect (() => {\n    if (data.attributes.isAdmin && !open) {\n      const date = new moment.utc(startDate).format('YYYY-MM-DD HH:mm:ss Z')\n      let url = `admin/jobs?date=${date}`\n      if (selectedProject && selectedProject.value.length ) {\n        url += `&name=${selectedProject.value}`\n      }\n      if (selectedCategory && selectedCategory.value.length) {\n        url += `&category=${selectedCategory.value}`\n      }\n      if (selectedUser && selectedUser.value.length) {\n        users.map(i => {\n          if (i.name === selectedUser.label) {\n            url += `&user_id=${i.id}`\n          }\n        })\n      }\n  \n      dispatch(getFiltersJobsRequest(url))\n    }\n  }, [data, startDate, selectedProject, selectedCategory, selectedUser]);\n\n\n  useEffect(() => {\n    if (!data.attributes.isAdmin) {\n      dispatch(getJobsRequest(`jobs?date=${moment(startDate).format('DD-MM-YYYY hh:mm:ss')}`))\n    }\n  }, [startDate])\n\n  const logOut = () => {\n    dispatch(sessionDeleteRequest('authentications'))\n  }\n\n  const handleChange = (e) => {\n    if (!open) {\n      const text = (e.target.validity.valid) ? e.target.value : value\n      setValue(text)\n    } else {\n      !flag && setFlag(true)\n      const editText = (e.target.validity.valid) ? e.target.value : valueEdit\n      setValueEdit(editText)\n    }\n  }\n\n  const create = () => {\n    const sendData = { name: selectedProject.value, category: selectedCategory.value, hours: value, user_id: data.id }\n    dispatch(jobCreateRequest('jobs', sendData))\n    setSelectedProject(null)\n    setSelectedCategory(null)\n    setValue('')\n  }\n\n  const remove = id => {\n    dispatch(jobDeleteRequest(`jobs/${id}`))\n  }\n\n  const getJob = (id) => {\n    setModalOpen(true)\n    dispatch(getJobRequest(`jobs/${id}`))\n  }\n\n  const updateJob = () => {\n    const data = {}\n    if (selectedEditProject) data.name = selectedEditProject.value\n    if (selectedEditCategory) data.category = selectedEditCategory.value\n    if (valueEdit) data.hours = valueEdit\n    !isEmpty(data) && dispatch(jobUpdateRequest(`jobs/${job.id}`, data))\n    setModalOpen(false)\n  }\n\n  return (\n    <Developer\n      logOut={ logOut }\n      user={ data.attributes }\n      selectedProject={ selectedProject }\n      setSelectedProject={ setSelectedProject }\n      selectedCategory={ selectedCategory }\n      setSelectedCategory={ setSelectedCategory }\n      setValue={ setValue }\n      value={ value }\n      handleChange={ handleChange }\n      create={ create }\n      jobsData={ jobsData }\n      remove={ remove }\n      startDate={ startDate }\n      setStartDate={ setStartDate }\n      usersArray={ usersArray }\n      selectedUser={ selectedUser }\n      setSelectedUser={ setSelectedUser }\n      users={ users }\n      getJob={ getJob }\n      open={ open }\n      setModalOpen={ setModalOpen }\n      job={ job }\n      flag={ flag }\n      updateJob={ updateJob }\n      selectedEditProject={ selectedEditProject }\n      setSelectedEditProject={ setSelectedEditProject }\n      selectedEditCategory={ selectedEditCategory }\n      setSelectedEditCategory={ setSelectedEditCategory }\n      valueEdit={ valueEdit }\n    />\n  )\n}\n","/home/vitalik/work/test/ideaboard-api/frontend/src/components/Developer/index.js",["154"],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/reducer.js",["155"],"import * as constant from './actions'\n\nconst initialResourceState = {\n  jobsData: [],\n  loading: false,\n  job: {},\n  errors: {}\n}\n\nexport default (state = initialResourceState, { type, payload }) => {\n  switch (type) {\n\n  case constant.GET_JOBS_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.GET_JOBS_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      jobsData: payload.job\n    }\n  case constant.GET_JOBS_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.GET_JOB_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.GET_JOB_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      job: payload.job\n    }\n  case constant.GET_JOB_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.CREATE_JOB_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.CREATE_JOB_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      jobsData: [...state.jobsData, payload.job] \n    }\n  case constant.CREATE_JOB_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.DELETE_JOB_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.DELETE_JOB_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      jobsData: state.jobsData.filter(i => i.id !== payload.id), \n    }\n  case constant.DELETE_JOB_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.GET_FILTERS_JOBS_REQUEST:\n    return {\n      ...state,\n      loading: true\n    }\n  case constant.GET_FILTERS_JOBS_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      jobsData: payload.job\n    }\n  case constant.GET_FILTERS_JOBS_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  case constant.JOB_UPDATE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n  case constant.JOB_UPDATE_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      jobsData: state.jobsData.map(item => {\n        if (item.id === payload.job.id) {\n          item.name = payload.job.name\n          item.category = payload.job.category\n          item.hours = payload.job.hours\n          return item\n        }\n        return item\n      })\n    }\n  case constant.JOB_UPDATE_FAILURE:\n    return {\n      ...state,\n      loading: false,\n      errors: payload\n    }\n\n  default:\n    return state\n  }\n}","/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/actions.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/sagas.js",["156"],"import { put, call, takeLatest } from 'redux-saga/effects'\n// import { toastr } from 'react-redux-toastr'\n\nimport * as actions from './actions'\n\nfunction* getJobs(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getJobsSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getJobsFailure(resource, e, thunk))\n  }\n}\n\nfunction* getJob(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getJobSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getJobFailure(resource, e, thunk))\n  }\n}\n\nfunction* createJob(api, { data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.post], `/${resource}`,  data)\n    yield put(actions.jobCreateSuccess(resource, detail, { data }, thunk))\n  } catch (e) {\n    yield put(actions.jobCreateFailure(resource, e, { data }, thunk))\n  }\n}\n\nfunction* deleteJob(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.delete], `/${resource}`)\n    yield put(actions.jobDeleteSuccess(resource, detail, thunk))\n    // toastr.success('Success', 'You successfully loggout!')\n  } catch (e) {\n    yield put(actions.jobDeleteFailure(resource, e, thunk))\n    // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* getFiltersJobs(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getFiltersJobsSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getFiltersJobsFailure(resource, e, thunk))\n  }\n}\n\nfunction* updateJob(api, { data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.put], `/${resource}`,  data)\n    yield put(actions.jobUpdateSuccess(resource, detail, { data }, thunk))\n    // yield put(actions.resourceGetRequest(`/clients?page=${currentPage}`, detail, thunk))\n    // toastr.success('Success', 'Updated!')\n  } catch (e) {\n    yield put(actions.jobUpdateFailure(resource, e, { data }, thunk))\n    // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* watchGetJobsRequest(api, { meta }) {\n  yield call(getJobs, api, meta)\n}\n\nfunction* watchGetJobRequest(api, { meta }) {\n  yield call(getJob, api, meta)\n}\n\nfunction* watchCreateJobRequest(api, { payload, meta }) {\n  yield call(createJob, api, payload, meta)\n}\n\nfunction* watchJobDeleteRequest(api, { meta }) {\n  yield call(deleteJob, api, meta)\n}\n\nfunction* watchGetFiltersJobsRequest(api, { meta }) {\n  yield call(getFiltersJobs, api, meta)\n}\n\nfunction* watchJobUpdateRequest(api, { payload, meta }) {\n  yield call(updateJob, api, payload, meta)\n}\n\n\nexport default function* ({ api }) {\n  yield takeLatest(actions.GET_JOBS_REQUEST, watchGetJobsRequest, api)\n  yield takeLatest(actions.GET_JOB_REQUEST, watchGetJobRequest, api)\n  yield takeLatest(actions.CREATE_JOB_REQUEST, watchCreateJobRequest, api)\n  yield takeLatest(actions.DELETE_JOB_REQUEST, watchJobDeleteRequest, api)\n  yield takeLatest(actions.GET_FILTERS_JOBS_REQUEST, watchGetFiltersJobsRequest, api)\n  yield takeLatest(actions.JOB_UPDATE_REQUEST, watchJobUpdateRequest, api)\n}","/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/index.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/CalendarIcon.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/ArrowBackIcon.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/NextArrowIcon.js",[],"/home/vitalik/work/test/ideaboard-api/frontend/src/components/assets/svg/CancelIcon.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":4,"column":17,"nodeType":"163","messageId":"164","endLine":4,"endColumn":22},{"ruleId":"165","severity":1,"message":"166","line":13,"column":1,"nodeType":"167","endLine":15,"endColumn":2},{"ruleId":"165","severity":1,"message":"168","line":10,"column":1,"nodeType":"167","endLine":88,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":60,"column":1,"nodeType":"167","endLine":65,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":16,"column":6,"nodeType":"171","endLine":16,"endColumn":8,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"170","line":37,"column":6,"nodeType":"171","endLine":37,"endColumn":12,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":42,"column":22,"nodeType":"176","messageId":"177","endLine":42,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":60,"column":21,"nodeType":"176","messageId":"177","endLine":60,"endColumn":23},{"ruleId":"169","severity":1,"message":"178","line":69,"column":6,"nodeType":"171","endLine":69,"endColumn":72,"suggestions":"179"},{"ruleId":"169","severity":1,"message":"180","line":76,"column":6,"nodeType":"171","endLine":76,"endColumn":17,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":174,"column":45,"nodeType":"176","messageId":"183","endLine":174,"endColumn":47},{"ruleId":"165","severity":1,"message":"168","line":10,"column":1,"nodeType":"167","endLine":132,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":90,"column":1,"nodeType":"167","endLine":97,"endColumn":2},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["186"],["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'open', and 'users'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'data.attributes.isAdmin' and 'dispatch'. Either include them or remove the dependency array.",["189"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [data, dispatch]",{"range":"200","text":"201"},"Update the dependencies array to be: [data, startDate, selectedProject, selectedCategory, selectedUser, open, dispatch, users]",{"range":"202","text":"203"},"Update the dependencies array to be: [data.attributes.isAdmin, dispatch, startDate]",{"range":"204","text":"205"},[499,501],"[dispatch]",[1363,1369],"[data, dispatch]",[2292,2358],"[data, startDate, selectedProject, selectedCategory, selectedUser, open, dispatch, users]",[2525,2536],"[data.attributes.isAdmin, dispatch, startDate]"]