{"ast":null,"code":"var _jsxFileName = \"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash.isempty';\nimport { Developer } from '../components';\nimport { sessionDeleteRequest } from '../store/sessions/actions'; // import { history } from '../../services'\n// const initialState = {\n//   email: '',\n//   password: ''\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeveloperContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [value, setValue] = useState('');\n  const {\n    data\n  } = useSelector(state => state.sessions); // const handleChange = (key, text) => {\n  //   setValue({...value, [key]: text})\n  //   // errorsState[key] && setErrorsState({...errorsState, [key]: ''})\n  // }\n  // useEffect(() => {\n  //   if (!isEmpty(data)) {\n  //     console.log('wedfwedwedf')\n  //   }\n  // }, [data])\n\n  const logOut = () => {\n    dispatch(sessionDeleteRequest('authentications'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Developer, {\n    logOut: logOut,\n    user: data.user,\n    selectedOption: selectedOption,\n    setSelectedOption: setSelectedOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeveloperContainer, \"c4vamtFRpUAmCFIJ+XNVvgux+BI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DeveloperContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperContainer\");","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","isEmpty","Developer","sessionDeleteRequest","DeveloperContainer","dispatch","selectedOption","setSelectedOption","value","setValue","data","state","sessions","logOut","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,oBAAT,QAAqC,2BAArC,C,CACA;AAEA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAWV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B,CANsC,CAQtC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,MAAM,GAAG,MAAM;AACnBR,IAAAA,QAAQ,CAACF,oBAAoB,CAAC,iBAAD,CAArB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,MAAM,EAAGU,MADX;AAEE,IAAA,IAAI,EAAGH,IAAI,CAACI,IAFd;AAGE,IAAA,cAAc,EAAGR,cAHnB;AAIE,IAAA,iBAAiB,EAAGC;AAJtB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/BM;;GAAMH,kB;UACML,W,EAKAC,W;;;KANNI,kB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport isEmpty from 'lodash.isempty'\n\nimport { Developer } from '../components'\nimport { sessionDeleteRequest } from '../store/sessions/actions'\n// import { history } from '../../services'\n\n// const initialState = {\n//   email: '',\n//   password: ''\n// }\n\nexport const DeveloperContainer = () => {\n  const dispatch = useDispatch()\n\n  const [selectedOption, setSelectedOption] = useState(null)\n  const [value, setValue] = useState('')\n\n  const { data } = useSelector(state => state.sessions)\n\n  // const handleChange = (key, text) => {\n  //   setValue({...value, [key]: text})\n  //   // errorsState[key] && setErrorsState({...errorsState, [key]: ''})\n  // }\n\n  // useEffect(() => {\n  //   if (!isEmpty(data)) {\n  //     console.log('wedfwedwedf')\n  //   }\n  // }, [data])\n\n  const logOut = () => {\n    dispatch(sessionDeleteRequest('authentications'))\n  }\n\n  return (\n    <Developer\n      logOut={ logOut }\n      user={ data.user }\n      selectedOption={ selectedOption }\n      setSelectedOption={ setSelectedOption }\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}