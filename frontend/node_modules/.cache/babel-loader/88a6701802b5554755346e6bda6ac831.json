{"ast":null,"code":"import { put, call, takeLatest } from 'redux-saga/effects'; // import { toastr } from 'react-redux-toastr'\n\nimport * as actions from './actions';\n\nfunction* getJobs(api, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`);\n    yield put(actions.getJobsSuccess(resource, detail, thunk));\n  } catch (e) {\n    yield put(actions.getJobsFailure(resource, e, thunk));\n  }\n}\n\nfunction* getJob(api, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`);\n    yield put(actions.getJobSuccess(resource, detail, thunk));\n  } catch (e) {\n    yield put(actions.getJobFailure(resource, e, thunk));\n  }\n}\n\nfunction* createJob(api, {\n  data\n}, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.post], `/${resource}`, data);\n    yield put(actions.jobCreateSuccess(resource, detail, {\n      data\n    }, thunk));\n  } catch (e) {\n    yield put(actions.jobCreateFailure(resource, e, {\n      data\n    }, thunk));\n  }\n}\n\nfunction* deleteJob(api, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.delete], `/${resource}`);\n    yield put(actions.jobDeleteSuccess(resource, detail, thunk)); // toastr.success('Success', 'You successfully loggout!')\n  } catch (e) {\n    yield put(actions.jobDeleteFailure(resource, e, thunk)); // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* getFiltersJobs(api, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`);\n    yield put(actions.getFiltersJobsSuccess(resource, detail, thunk));\n  } catch (e) {\n    yield put(actions.getFiltersJobsFailure(resource, e, thunk));\n  }\n}\n\nfunction* updateJob(api, {\n  data\n}, {\n  resource,\n  thunk\n}) {\n  try {\n    const detail = yield call([api, api.put], `/${resource}`, data);\n    yield put(actions.jobUpdateSuccess(resource, detail, {\n      data\n    }, thunk)); // yield put(actions.resourceGetRequest(`/clients?page=${currentPage}`, detail, thunk))\n    // toastr.success('Success', 'Updated!')\n  } catch (e) {\n    yield put(actions.jobUpdateFailure(resource, e, {\n      data\n    }, thunk)); // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* watchGetJobsRequest(api, {\n  meta\n}) {\n  yield call(getJobs, api, meta);\n}\n\nfunction* watchGetJobRequest(api, {\n  meta\n}) {\n  yield call(getJob, api, meta);\n}\n\nfunction* watchCreateJobRequest(api, {\n  payload,\n  meta\n}) {\n  yield call(createJob, api, payload, meta);\n}\n\nfunction* watchJobDeleteRequest(api, {\n  meta\n}) {\n  yield call(deleteJob, api, meta);\n}\n\nfunction* watchGetFiltersJobsRequest(api, {\n  meta\n}) {\n  yield call(getFiltersJobs, api, meta);\n}\n\nfunction* watchJobUpdateRequest(api, {\n  payload,\n  meta\n}) {\n  yield call(updateJob, api, payload, meta);\n}\n\nexport default function* ({\n  api\n}) {\n  yield takeLatest(actions.GET_JOBS_REQUEST, watchGetJobsRequest, api);\n  yield takeLatest(actions.GET_JOB_REQUEST, watchGetJobRequest, api);\n  yield takeLatest(actions.CREATE_JOB_REQUEST, watchCreateJobRequest, api);\n  yield takeLatest(actions.DELETE_JOB_REQUEST, watchJobDeleteRequest, api);\n  yield takeLatest(actions.GET_FILTERS_JOBS_REQUEST, watchGetFiltersJobsRequest, api);\n  yield takeLeading(actions.JOB_UPDATE_REQUEST, watchJobUpdateRequest, api);\n}","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/sagas.js"],"names":["put","call","takeLatest","actions","getJobs","api","resource","thunk","detail","get","getJobsSuccess","e","getJobsFailure","getJob","getJobSuccess","getJobFailure","createJob","data","post","jobCreateSuccess","jobCreateFailure","deleteJob","delete","jobDeleteSuccess","jobDeleteFailure","getFiltersJobs","getFiltersJobsSuccess","getFiltersJobsFailure","updateJob","jobUpdateSuccess","jobUpdateFailure","watchGetJobsRequest","meta","watchGetJobRequest","watchCreateJobRequest","payload","watchJobDeleteRequest","watchGetFiltersJobsRequest","watchJobUpdateRequest","GET_JOBS_REQUEST","GET_JOB_REQUEST","CREATE_JOB_REQUEST","DELETE_JOB_REQUEST","GET_FILTERS_JOBS_REQUEST","takeLeading","JOB_UPDATE_REQUEST"],"mappings":"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","sourcesContent":["import { put, call, takeLatest } from 'redux-saga/effects'\n// import { toastr } from 'react-redux-toastr'\n\nimport * as actions from './actions'\n\nfunction* getJobs(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getJobsSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getJobsFailure(resource, e, thunk))\n  }\n}\n\nfunction* getJob(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getJobSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getJobFailure(resource, e, thunk))\n  }\n}\n\nfunction* createJob(api, { data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.post], `/${resource}`,  data)\n    yield put(actions.jobCreateSuccess(resource, detail, { data }, thunk))\n  } catch (e) {\n    yield put(actions.jobCreateFailure(resource, e, { data }, thunk))\n  }\n}\n\nfunction* deleteJob(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.delete], `/${resource}`)\n    yield put(actions.jobDeleteSuccess(resource, detail, thunk))\n    // toastr.success('Success', 'You successfully loggout!')\n  } catch (e) {\n    yield put(actions.jobDeleteFailure(resource, e, thunk))\n    // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* getFiltersJobs(api, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}`)\n    yield put(actions.getFiltersJobsSuccess(resource, detail, thunk))\n  } catch (e) {\n    yield put(actions.getFiltersJobsFailure(resource, e, thunk))\n  }\n}\n\nfunction* updateJob(api, { data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.put], `/${resource}`,  data)\n    yield put(actions.jobUpdateSuccess(resource, detail, { data }, thunk))\n    // yield put(actions.resourceGetRequest(`/clients?page=${currentPage}`, detail, thunk))\n    // toastr.success('Success', 'Updated!')\n  } catch (e) {\n    yield put(actions.jobUpdateFailure(resource, e, { data }, thunk))\n    // toastr.error('Oops! Something went wrong...')\n  }\n}\n\nfunction* watchGetJobsRequest(api, { meta }) {\n  yield call(getJobs, api, meta)\n}\n\nfunction* watchGetJobRequest(api, { meta }) {\n  yield call(getJob, api, meta)\n}\n\nfunction* watchCreateJobRequest(api, { payload, meta }) {\n  yield call(createJob, api, payload, meta)\n}\n\nfunction* watchJobDeleteRequest(api, { meta }) {\n  yield call(deleteJob, api, meta)\n}\n\nfunction* watchGetFiltersJobsRequest(api, { meta }) {\n  yield call(getFiltersJobs, api, meta)\n}\n\nfunction* watchJobUpdateRequest(api, { payload, meta }) {\n  yield call(updateJob, api, payload, meta)\n}\n\n\nexport default function* ({ api }) {\n  yield takeLatest(actions.GET_JOBS_REQUEST, watchGetJobsRequest, api)\n  yield takeLatest(actions.GET_JOB_REQUEST, watchGetJobRequest, api)\n  yield takeLatest(actions.CREATE_JOB_REQUEST, watchCreateJobRequest, api)\n  yield takeLatest(actions.DELETE_JOB_REQUEST, watchJobDeleteRequest, api)\n  yield takeLatest(actions.GET_FILTERS_JOBS_REQUEST, watchGetFiltersJobsRequest, api)\n  yield takeLeading(actions.JOB_UPDATE_REQUEST, watchJobUpdateRequest, api)\n}"]},"metadata":{},"sourceType":"module"}