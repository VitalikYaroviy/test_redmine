{"ast":null,"code":"export const GET_JOBS_REQUEST = 'GET_JOBS_REQUEST';\nexport const GET_JOBS_SUCCESS = 'GET_JOBS_SUCCEEDED';\nexport const GET_JOBS_FAILURE = 'GET_JOBS_FAILED';\nexport const getJobsRequest = resource => ({\n  type: GET_JOBS_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Index`\n  }\n});\nexport const getJobsSuccess = (resource, detail, request, thunk) => ({\n  type: GET_JOBS_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const getJobsFailure = (resource, error, request, thunk) => ({\n  type: GET_JOBS_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});\nexport const GET_JOB_REQUEST = 'GET_JOB_REQUEST';\nexport const GET_JOB_SUCCESS = 'GET_JOB_SUCCEEDED';\nexport const GET_JOB_FAILURE = 'GET_JOB_FAILED';\nexport const getJobRequest = resource => ({\n  type: GET_JOB_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Show`\n  }\n});\nexport const getJobSuccess = (resource, detail, request, thunk) => ({\n  type: GET_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const getJobFailure = (resource, error, request, thunk) => ({\n  type: GET_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});\nexport const CREATE_JOB_REQUEST = 'CREATE_JOB_REQUEST';\nexport const CREATE_JOB_SUCCESS = 'CREATE_JOB_SUCCESS';\nexport const CREATE_JOB_FAILURE = 'CREATE_JOB_FAILURE';\nexport const jobCreateRequest = (resource, data) => ({\n  type: CREATE_JOB_REQUEST,\n  payload: {\n    data\n  },\n  meta: {\n    resource,\n    thunk: `${resource}Create`\n  }\n});\nexport const jobCreateSuccess = (resource, detail, request, thunk) => ({\n  type: CREATE_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const jobCreateFailure = (resource, error, request, thunk) => ({\n  type: CREATE_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});\nexport const DELETE_JOB_REQUEST = 'DELETE_JOB_REQUEST';\nexport const DELETE_JOB_SUCCESS = 'DELETE_JOB_SUCCEEDED';\nexport const DELETE_JOB_FAILURE = 'DELETE_JOB_FAILED';\nexport const jobDeleteRequest = resource => ({\n  type: DELETE_JOB_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Delete`\n  }\n});\nexport const jobDeleteSuccess = (resource, detail, request, thunk) => ({\n  type: DELETE_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const jobDeleteFailure = (resource, error, request, thunk) => ({\n  type: DELETE_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});\nexport const GET_FILTERS_JOBS_REQUEST = 'GET_FILTERS_JOBS_REQUEST';\nexport const GET_FILTERS_JOBS_SUCCESS = 'GET_FILTERS_JOBS_SUCCEEDED';\nexport const GET_FILTERS_JOBS_FAILURE = 'GET_FILTERS_JOBS_FAILED';\nexport const getFiltersJobsRequest = resource => ({\n  type: GET_FILTERS_JOBS_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Index`\n  }\n});\nexport const getFiltersJobsSuccess = (resource, detail, request, thunk) => ({\n  type: GET_FILTERS_JOBS_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const getFiltersJobsFailure = (resource, error, request, thunk) => ({\n  type: GET_FILTERS_JOBS_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});\nexport const JOB_UPDATE_REQUEST = 'UPDATE_JOB_REQUEST';\nexport const JOB_UPDATE_SUCCESS = 'UPDATE_JOB_SUCCEEDED';\nexport const JOB_UPDATE_FAILURE = 'UPDATE_JOB_FAILED';\nexport const jobUpdateRequest = (resource, data, currentPage) => ({\n  type: JOB_UPDATE_REQUEST,\n  payload: {\n    data\n  },\n  meta: {\n    resource,\n    currentPage,\n    thunk: `${resource}Update`\n  }\n});\nexport const jobUpdateSuccess = (resource, detail, request, thunk) => ({\n  type: JOB_UPDATE_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n});\nexport const jobUpdateFailure = (resource, error, request, thunk) => ({\n  type: JOB_UPDATE_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n});","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/store/jobs/actions.js"],"names":["GET_JOBS_REQUEST","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsRequest","resource","type","meta","thunk","getJobsSuccess","detail","request","payload","getJobsFailure","error","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobRequest","getJobSuccess","getJobFailure","CREATE_JOB_REQUEST","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","jobCreateRequest","data","jobCreateSuccess","jobCreateFailure","DELETE_JOB_REQUEST","DELETE_JOB_SUCCESS","DELETE_JOB_FAILURE","jobDeleteRequest","jobDeleteSuccess","jobDeleteFailure","GET_FILTERS_JOBS_REQUEST","GET_FILTERS_JOBS_SUCCESS","GET_FILTERS_JOBS_FAILURE","getFiltersJobsRequest","getFiltersJobsSuccess","getFiltersJobsFailure","JOB_UPDATE_REQUEST","JOB_UPDATE_SUCCESS","JOB_UPDATE_FAILURE","jobUpdateRequest","currentPage","jobUpdateSuccess","jobUpdateFailure"],"mappings":"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","sourcesContent":["export const GET_JOBS_REQUEST = 'GET_JOBS_REQUEST'\nexport const GET_JOBS_SUCCESS = 'GET_JOBS_SUCCEEDED'\nexport const GET_JOBS_FAILURE = 'GET_JOBS_FAILED'\n\nexport const getJobsRequest = (resource) => ({\n  type: GET_JOBS_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Index`\n  }\n})\n\nexport const getJobsSuccess = (resource, detail, request, thunk) => ({\n  type: GET_JOBS_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const getJobsFailure = (resource, error, request, thunk) => ({\n  type: GET_JOBS_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})\n\nexport const GET_JOB_REQUEST = 'GET_JOB_REQUEST'\nexport const GET_JOB_SUCCESS = 'GET_JOB_SUCCEEDED'\nexport const GET_JOB_FAILURE = 'GET_JOB_FAILED'\n\nexport const getJobRequest = (resource) => ({\n  type: GET_JOB_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Show`\n  }\n})\n\nexport const getJobSuccess = (resource, detail, request, thunk) => ({\n  type: GET_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const getJobFailure = (resource, error, request, thunk) => ({\n  type: GET_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})\n\nexport const CREATE_JOB_REQUEST = 'CREATE_JOB_REQUEST'\nexport const CREATE_JOB_SUCCESS = 'CREATE_JOB_SUCCESS'\nexport const CREATE_JOB_FAILURE = 'CREATE_JOB_FAILURE'\n\nexport const jobCreateRequest = (resource, data) => ({\n  type: CREATE_JOB_REQUEST,\n  payload: { data },\n  meta: {\n    resource,\n    thunk: `${resource}Create`\n  }\n})\n\nexport const jobCreateSuccess = (resource, detail, request, thunk) => ({\n  type: CREATE_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const jobCreateFailure = (resource, error, request, thunk) => ({\n  type: CREATE_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})\n\nexport const DELETE_JOB_REQUEST = 'DELETE_JOB_REQUEST'\nexport const DELETE_JOB_SUCCESS = 'DELETE_JOB_SUCCEEDED'\nexport const DELETE_JOB_FAILURE = 'DELETE_JOB_FAILED'\n\nexport const jobDeleteRequest = (resource) => ({\n  type: DELETE_JOB_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Delete`\n  }\n})\n\nexport const jobDeleteSuccess = (resource, detail, request, thunk) => ({\n  type: DELETE_JOB_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const jobDeleteFailure = (resource, error, request, thunk) => ({\n  type: DELETE_JOB_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})\n\nexport const GET_FILTERS_JOBS_REQUEST = 'GET_FILTERS_JOBS_REQUEST'\nexport const GET_FILTERS_JOBS_SUCCESS = 'GET_FILTERS_JOBS_SUCCEEDED'\nexport const GET_FILTERS_JOBS_FAILURE = 'GET_FILTERS_JOBS_FAILED'\n\nexport const getFiltersJobsRequest = (resource) => ({\n  type: GET_FILTERS_JOBS_REQUEST,\n  meta: {\n    resource,\n    thunk: `${resource}Index`\n  }\n})\n\nexport const getFiltersJobsSuccess = (resource, detail, request, thunk) => ({\n  type: GET_FILTERS_JOBS_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const getFiltersJobsFailure = (resource, error, request, thunk) => ({\n  type: GET_FILTERS_JOBS_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})\n\nexport const JOB_UPDATE_REQUEST = 'UPDATE_JOB_REQUEST'\nexport const JOB_UPDATE_SUCCESS = 'UPDATE_JOB_SUCCEEDED'\nexport const JOB_UPDATE_FAILURE = 'UPDATE_JOB_FAILED'\n\nexport const jobUpdateRequest = (resource, data, currentPage) => ({\n  type: JOB_UPDATE_REQUEST,\n  payload: { data },\n  meta: {\n    resource,\n    currentPage,\n    thunk: `${resource}Update`\n  }\n})\n\nexport const jobUpdateSuccess = (resource, detail, request, thunk) => ({\n  type: JOB_UPDATE_SUCCESS,\n  payload: detail,\n  meta: {\n    request,\n    thunk,\n    resource\n  }\n})\n\nexport const jobUpdateFailure = (resource, error, request, thunk) => ({\n  type: JOB_UPDATE_FAILURE,\n  error: true,\n  payload: error,\n  meta: {\n    request,\n    resource,\n    thunk\n  }\n})"]},"metadata":{},"sourceType":"module"}