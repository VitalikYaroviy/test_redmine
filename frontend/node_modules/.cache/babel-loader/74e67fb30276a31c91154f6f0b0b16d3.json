{"ast":null,"code":"import merge from 'lodash.merge';\nimport { apiUrl } from '../../constants/api';\n\nconst checkStatus = response => {\n  if (response.ok) return response;\n  return response.json().then(json => Promise.reject(json)); // eslint-disable-line\n};\n\nexport const parseJSON = response => response.text().then(responseBody => responseBody ? JSON.parse(responseBody) : {});\nexport const parseSettings = ({\n  method = 'get',\n  data,\n  locale,\n  ...otherSettings\n} = {}) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Accept-Language': locale\n  };\n  const settings = merge({\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: 'include',\n    method,\n    headers\n  }, otherSettings);\n  return settings;\n};\nexport const parseEndpoint = (endpoint, params) => {\n  const url = endpoint.indexOf('http') === 0 ? endpoint : apiUrl + endpoint;\n  const querystring = params ? `?${JSON.stringify(params)}` : '';\n  return `${url}${querystring}`;\n};\nconst api = {};\n\napi.request = (endpoint, {\n  params,\n  ...settings\n} = {}) => {\n  return fetch(parseEndpoint(endpoint, params), parseSettings(settings)).then(checkStatus).then(parseJSON);\n};\n\n['delete', 'get'].forEach(method => {\n  api[method] = (endpoint, settings) => api.request(endpoint, {\n    method,\n    ...settings\n  });\n});\n['post', 'put', 'patch'].forEach(method => {\n  api[method] = (endpoint, data, settings) => api.request(endpoint, {\n    method,\n    data,\n    ...settings\n  });\n});\n\napi.create = (settings = {}) => ({\n  settings,\n\n  setToken(token) {\n    this.settings.headers = { ...this.settings.headers,\n      Authorization: token\n    };\n  },\n\n  unsetToken() {\n    this.settings.headers = { ...this.settings.headers,\n      Authorization: undefined\n    };\n  },\n\n  request(endpoint, settings) {\n    return api.request(endpoint, merge({}, this.settings, settings));\n  },\n\n  post(endpoint, data, settings) {\n    return this.request(endpoint, {\n      method: 'post',\n      data,\n      ...settings\n    });\n  },\n\n  get(endpoint, settings) {\n    return this.request(endpoint, {\n      method: 'get',\n      ...settings\n    });\n  },\n\n  put(endpoint, data, settings) {\n    return this.request(endpoint, {\n      method: 'put',\n      data,\n      ...settings\n    });\n  },\n\n  patch(endpoint, data, settings) {\n    return this.request(endpoint, {\n      method: 'patch',\n      data,\n      ...settings\n    });\n  },\n\n  delete(endpoint, settings) {\n    return this.request(endpoint, {\n      method: 'delete',\n      ...settings\n    });\n  }\n\n});\n\nexport default api;","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/services/api/index.js"],"names":["merge","apiUrl","checkStatus","response","ok","json","then","Promise","reject","parseJSON","text","responseBody","JSON","parse","parseSettings","method","data","locale","otherSettings","headers","Accept","settings","body","stringify","undefined","credentials","parseEndpoint","endpoint","params","url","indexOf","querystring","api","request","fetch","forEach","create","setToken","token","Authorization","unsetToken","post","get","put","patch","delete"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge'\n\nimport { apiUrl } from '../../constants/api'\n\nconst checkStatus = (response) => {\n  if (response.ok) return response\n\n  return response.json().then(json => Promise.reject(json)) // eslint-disable-line\n}\n\nexport const parseJSON = response => (\n  response.text()\n    .then((responseBody) => responseBody ? JSON.parse(responseBody) : {})\n)\n\nexport const parseSettings = ({\n  method = 'get', data, locale, ...otherSettings\n} = {}) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Accept-Language': locale\n  }\n  const settings = merge({\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: 'include',\n    method,\n    headers\n  }, otherSettings)\n  return settings\n}\n\nexport const parseEndpoint = (endpoint, params) => {\n  const url = endpoint.indexOf('http') === 0 ? endpoint : apiUrl + endpoint\n  const querystring = params ? `?${JSON.stringify(params)}` : ''\n  return `${url}${querystring}`\n}\n\nconst api = {}\n\napi.request = (endpoint, { params, ...settings } = {}) => {\n  return fetch(parseEndpoint(endpoint, params), parseSettings(settings))\n    .then(checkStatus)\n    .then(parseJSON)\n}\n\n['delete', 'get'].forEach((method) => {\n  api[method] = (endpoint, settings) => api.request(endpoint, { method, ...settings })\n});\n['post', 'put', 'patch'].forEach((method) => {\n  api[method] = (endpoint, data, settings) => api.request(endpoint, { method, data, ...settings })\n})\n\napi.create = (settings = {}) => ({\n  settings,\n\n  setToken(token) {\n    this.settings.headers = {\n      ...this.settings.headers,\n      Authorization: token\n    }\n  },\n\n  unsetToken() {\n    this.settings.headers = {\n      ...this.settings.headers,\n      Authorization: undefined\n    }\n  },\n\n  request(endpoint, settings) {\n    return api.request(endpoint, merge({}, this.settings, settings))\n  },\n\n  post(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'post', data, ...settings })\n  },\n\n  get(endpoint, settings) {\n    return this.request(endpoint, { method: 'get', ...settings })\n  },\n\n  put(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'put', data, ...settings })\n  },\n\n  patch(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'patch', data, ...settings })\n  },\n\n  delete(endpoint, settings) {\n    return this.request(endpoint, { method: 'delete', ...settings })\n  }\n})\n\nexport default api"]},"metadata":{},"sourceType":"module"}