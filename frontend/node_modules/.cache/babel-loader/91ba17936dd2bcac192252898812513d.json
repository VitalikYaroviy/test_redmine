{"ast":null,"code":"var _jsxFileName = \"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash.isempty';\nimport { Developer } from '../components'; // import { sessionCreateRequest } from '../store/sessions/actions'\n// import { history } from '../../services'\n// const initialState = {\n//   email: '',\n//   password: ''\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeveloperContainer = () => {\n  _s();\n\n  const dispatch = useDispatch(); // const [value, setValue] = useState(initialState)\n  // const { data } = useSelector(state => state.sessions)\n  // const handleChange = (key, text) => {\n  //   setValue({...value, [key]: text})\n  //   // errorsState[key] && setErrorsState({...errorsState, [key]: ''})\n  // }\n  // useEffect(() => {\n  //   if (!isEmpty(data)) {\n  //     console.log('wedfwedwedf')\n  //   }\n  // }, [data])\n\n  const logOut = () => {// dispatch(sessionCreateRequest('authentications', value))\n  };\n\n  return /*#__PURE__*/_jsxDEV(Developer, {\n    logOut: logOut\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeveloperContainer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DeveloperContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperContainer\");","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","isEmpty","Developer","DeveloperContainer","dispatch","logOut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADsC,CAGtC;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,MAAM,GAAG,MAAM,CACnB;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,MAAM,EAAGA;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;GAAMF,kB;UACMJ,W;;;KADNI,kB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport isEmpty from 'lodash.isempty'\n\nimport { Developer } from '../components'\n// import { sessionCreateRequest } from '../store/sessions/actions'\n// import { history } from '../../services'\n\n// const initialState = {\n//   email: '',\n//   password: ''\n// }\n\nexport const DeveloperContainer = () => {\n  const dispatch = useDispatch()\n\n  // const [value, setValue] = useState(initialState)\n\n  // const { data } = useSelector(state => state.sessions)\n\n  // const handleChange = (key, text) => {\n  //   setValue({...value, [key]: text})\n  //   // errorsState[key] && setErrorsState({...errorsState, [key]: ''})\n  // }\n\n  // useEffect(() => {\n  //   if (!isEmpty(data)) {\n  //     console.log('wedfwedwedf')\n  //   }\n  // }, [data])\n\n  const logOut = () => {\n    // dispatch(sessionCreateRequest('authentications', value))\n  }\n\n  return (\n    <Developer\n      logOut={ logOut }\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}