{"ast":null,"code":"var _jsxFileName = \"/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { Developer } from '../components';\nimport { sessionDeleteRequest, getUsersRequest } from '../store/sessions/actions';\nimport { getJobsRequest, jobCreateRequest, jobDeleteRequest } from '../store/jobs/actions';\nimport { history } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeveloperContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [value, setValue] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  const [url, setUrl] = useState('');\n  const [usersArray, setUsersArray] = useState([]);\n  const {\n    data,\n    users\n  } = useSelector(state => state.sessions);\n  const {\n    jobsData\n  } = useSelector(state => state.jobs);\n  useEffect(() => {\n    if (!data.attributes.isAdmin) dispatch(getUsersRequest('users'));\n  }, []); // ['user', 'user_id', 'name']\n\n  useEffect(() => {\n    if (users.length) {\n      const usersData = [];\n      users.map(item => {\n        usersData.push({\n          value: item.name.toLowerCase(),\n          label: item.name\n        });\n      });\n      setUsersArray(usersData);\n    }\n  }, [users]);\n  useEffect(() => {\n    const date = '2021-03-05 00:00:00 +0200';\n    const url = `admin/jobs?created_at=${date}`;\n    setUrl(url);\n\n    if (selectedProject && selectedProject.value.length) {\n      url.concat(`&name=${selectedProject.value}`);\n      setUrl(url => url.concat(`&name=${selectedProject.value}`)); // console.log('1111', url.concat(`&name=${selectedProject.value}`))\n    } else if (selectedCategory && selectedCategory.value.length) {\n      url.concat(`&catefory=${selectedProject.value}`);\n      console.log('2222', url);\n    } else if (selectedUser && selectedUser.value.length) {\n      url.concat(`&user_id=${selectedUser.value}`);\n      console.log('3333', url);\n    } // if (!data.attributes.isAdmin) dispatch(getUsersRequest('users'))\n    // console.log('tytytyt', selectedUser, selectedProject, selectedCategory)\n    // if (selectedUser || selectedProject || selectedCategory) {\n    //   dispatch(getFiltersJobsRequest(`admin/jobs?name=${selectedProject.value}&category=${selectedCategory.value}`))\n    // }\n\n  }, [selectedProject, selectedCategory, selectedUser]);\n  useEffect(() => {\n    dispatch(getJobsRequest(`jobs?date=${moment(startDate).format('DD-MM-YYYY hh:mm:ss')}`));\n  }, [startDate]);\n\n  const logOut = () => {\n    history.push('/?rhhryrhy=ikul'); // dispatch(sessionDeleteRequest('authentications'))\n  };\n\n  const handleChange = e => {\n    const financialGoal = e.target.validity.valid ? e.target.value : value;\n    setValue(financialGoal);\n  };\n\n  const create = () => {\n    const sendData = {\n      name: selectedProject.value,\n      category: selectedCategory.value,\n      hours: value,\n      user_id: data.id\n    };\n    dispatch(jobCreateRequest('jobs', sendData));\n    setSelectedProject(null);\n    setSelectedCategory(null);\n    setValue('');\n  };\n\n  const remove = id => {\n    dispatch(jobDeleteRequest(`jobs/${id}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Developer, {\n    logOut: logOut,\n    user: data.attributes,\n    selectedProject: selectedProject,\n    setSelectedProject: setSelectedProject,\n    selectedCategory: selectedCategory,\n    setSelectedCategory: setSelectedCategory,\n    setValue: setValue,\n    value: value,\n    handleChange: handleChange,\n    create: create,\n    jobsData: jobsData,\n    remove: remove,\n    startDate: startDate,\n    setStartDate: setStartDate,\n    usersArray: usersArray,\n    selectedUser: selectedUser,\n    setSelectedUser: setSelectedUser,\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeveloperContainer, \"L4rZcr5vPbH7eBWh9vzE069hhbU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DeveloperContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperContainer\");","map":{"version":3,"sources":["/home/vitalik/work/test/ideaboard-api/frontend/src/containers/DeveloperContainer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","moment","Developer","sessionDeleteRequest","getUsersRequest","getJobsRequest","jobCreateRequest","jobDeleteRequest","history","DeveloperContainer","dispatch","selectedProject","setSelectedProject","selectedCategory","setSelectedCategory","selectedUser","setSelectedUser","value","setValue","startDate","setStartDate","Date","url","setUrl","usersArray","setUsersArray","data","users","state","sessions","jobsData","jobs","attributes","isAdmin","length","usersData","map","item","push","name","toLowerCase","label","date","concat","console","log","format","logOut","handleChange","e","financialGoal","target","validity","valid","create","sendData","category","hours","user_id","id","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\n\nimport { Developer } from '../components'\nimport { sessionDeleteRequest, getUsersRequest } from '../store/sessions/actions'\nimport { getJobsRequest, jobCreateRequest, jobDeleteRequest } from '../store/jobs/actions'\nimport { history } from '../services'\n\nexport const DeveloperContainer = () => {\n  const dispatch = useDispatch()\n\n  const [selectedProject, setSelectedProject] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [value, setValue] = useState('')\n  const [startDate, setStartDate] = useState(new Date())\n\n  const [url, setUrl] = useState('')\n\n  const [usersArray, setUsersArray] = useState([])\n\n  const { data, users } = useSelector(state => state.sessions)\n  const { jobsData } = useSelector(state => state.jobs)\n\n  useEffect(() => {\n    if (!data.attributes.isAdmin) dispatch(getUsersRequest('users'))\n  }, [])\n\n// ['user', 'user_id', 'name']\n    \n  useEffect(() => {\n    if (users.length) {\n      const usersData =  [];\n      users.map(item => {\n        usersData.push({ value: item.name.toLowerCase(), label: item.name })\n      })\n      setUsersArray(usersData)\n    }\n  }, [users])\n\n  useEffect(() => {\n    const date = '2021-03-05 00:00:00 +0200'\n    const url = `admin/jobs?created_at=${date}`\n    setUrl(url)\n    if (selectedProject && selectedProject.value.length ) {\n      url.concat(`&name=${selectedProject.value}`)\n      setUrl(url => url.concat(`&name=${selectedProject.value}`))\n      // console.log('1111', url.concat(`&name=${selectedProject.value}`))\n    } else if (selectedCategory && selectedCategory.value.length) {\n      url.concat(`&catefory=${selectedProject.value}`)\n      console.log('2222', url)\n    } else if (selectedUser && selectedUser.value.length) {\n      url.concat(`&user_id=${selectedUser.value}`)\n      console.log('3333', url)\n    }\n    // if (!data.attributes.isAdmin) dispatch(getUsersRequest('users'))\n    // console.log('tytytyt', selectedUser, selectedProject, selectedCategory)\n    // if (selectedUser || selectedProject || selectedCategory) {\n    //   dispatch(getFiltersJobsRequest(`admin/jobs?name=${selectedProject.value}&category=${selectedCategory.value}`))\n    // }\n  }, [selectedProject, selectedCategory, selectedUser])\n\n\n  useEffect(() => {\n    dispatch(getJobsRequest(`jobs?date=${moment(startDate).format('DD-MM-YYYY hh:mm:ss')}`))\n  }, [startDate])\n\n  const logOut = () => {\n    history.push('/?rhhryrhy=ikul')\n    // dispatch(sessionDeleteRequest('authentications'))\n  }\n\n  const handleChange = (e) => {\n    const financialGoal = (e.target.validity.valid) ? e.target.value : value\n    setValue(financialGoal)\n  }\n\n  const create = () => {\n    const sendData = { name: selectedProject.value, category: selectedCategory.value, hours: value, user_id: data.id }\n    dispatch(jobCreateRequest('jobs', sendData))\n    setSelectedProject(null)\n    setSelectedCategory(null)\n    setValue('')\n  }\n\n  const remove = id => {\n    dispatch(jobDeleteRequest(`jobs/${id}`))\n  }\n\n  return (\n    <Developer\n      logOut={ logOut }\n      user={ data.attributes }\n      selectedProject={ selectedProject }\n      setSelectedProject={ setSelectedProject }\n      selectedCategory={ selectedCategory }\n      setSelectedCategory={ setSelectedCategory }\n      setValue={ setValue }\n      value={ value }\n      handleChange={ handleChange }\n      create={ create }\n      jobsData={ jobsData }\n      remove={ remove }\n      startDate={ startDate }\n      setStartDate={ setStartDate }\n      usersArray={ usersArray }\n      selectedUser={ selectedUser }\n      setSelectedUser={ setSelectedUser }\n      users={ users }\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}